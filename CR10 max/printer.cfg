# Teaching Tech configuration to suit standard Creality V2.4 8 bit mainboard and Fluidd
# Based on:
# https://github.com/KevinOConnor/klipper/blob/master/config/printer-creality-ender3max-2021.cfg
# Please ensure you PID autotune your heaters rather than just using my PID values!
# You will also need to substitute your own serial address after sending ls /dev/serial/by-id/* via SSH
# This machine is fitted with a BLtouch so X,Y & Z offsets will need to be calibrated too.

# DO NOT COPY THIS FILE WITHOUT CAREFULLY READING AND UPDATING IT
# FIRST. Incorrectly configured parameters may cause damage.

# See docs/Config_Reference.md for a description of parameters.

[stepper_x]
step_pin: ar54
dir_pin: ar55
enable_pin: !ar38
microsteps: 16
rotation_distance: 40
endstop_pin: ^ar3
position_endstop: 0
position_max: 450
homing_speed: 50

[stepper_y]
step_pin: ar60
dir_pin: !ar61
enable_pin: !ar56
microsteps: 16
rotation_distance: 40
endstop_pin: ^ar14
position_endstop: 0
position_max: 450
homing_speed: 50

[stepper_z]
step_pin: ar46
dir_pin: !ar48
enable_pin: !ar62
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
position_min: -5
position_max: 470

[safe_z_home]
home_xy_position: 150, 150
speed: 100
z_hop: 10
z_hop_speed: 5

[bltouch]
sensor_pin: ^ar19
control_pin: ar11
pin_up_touch_mode_reports_triggered: True
probe_with_touch_mode: True
x_offset: -38
y_offset: -2
z_offset: 3.50
speed: 10
samples: 2
sample_retract_dist: 5.0
lift_speed: 40
samples_tolerance_retries: 3
samples: 2

[bed_mesh]
speed: 300
mesh_min: 50, 50
mesh_max: 400, 400
algorithm: bicubic
probe_count: 5,5
horizontal_move_z: 6

[gcode_macro G29]                    # If moving from marlin to klipper uncomment to mimic G29
gcode:
  BED_MESH_CALIBRATE
  G1 X0 Y0 Z10 F4000

[extruder]
max_extrude_only_distance: 100.0
step_pin: ar26
dir_pin: !ar28
enable_pin: !ar24
microsteps: 16
rotation_distance: 7.824
Rotation_Distance.md
nozzle_diameter: 0.600
filament_diameter: 1.750
heater_pin: ar10
sensor_type: EPCOS 100K B57560G104F
sensor_pin: analog13
min_temp: 0
max_temp: 280
pressure_advance: 0.035                 #This value is to suit a direct drive E3D Hemera

# I am using a relay to switch on and off the noisy bed heater PSU. It is triggerd by the YMAX enstop port
#[controller_fan bed_psu]
#pin: !ar15
#heater: heater_bed
#stepper: extruder
#idle_timeout: 20

# I am usng a relay to switch on and off the electronics cooling fan. It is triggered from servo port labelled 12
#[controller_fan mainboard_fan]
#pin: !ar12
#heater: extruder
#idle_timeout: 20

[heater_bed]
heater_pin: ar8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: analog14
min_temp: 0
max_temp: 120

[fan]
pin: ar9

[virtual_sdcard]
path: ~/gcode_files

[pause_resume]

[display_status]

[filament_switch_sensor e0_sensor]
pause_on_runout: True
runout_gcode:
    M600 ; pause macro
switch_pin: ar2

[temperature_sensor raspberry_pi]
sensor_type: temperature_host

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-1 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

[mcu]
serial: /dev/serial/by-id/usb-FTDI_FT232R_USB_UART_AK06W5E3-if00-port0
pin_map: arduino

[printer]
kinematics: cartesian
max_velocity: 200
max_accel: 600
max_accel_to_decel: 600
max_z_velocity: 5
max_z_accel: 100
square_corner_velocity: 5

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 25.493
#*# pid_ki = 1.268
#*# pid_kd = 128.104
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 73.517
#*# pid_ki = 0.911
#*# pid_kd = 1483.200





